// <auto-generated />
using System;
using Book_Store.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Book_Store.Migrations
{
    [DbContext(typeof(BookStoreContext))]
    [Migration("20230312070510_AddBooksDummyData")]
    partial class AddBooksDummyData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.1.23111.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Book_Store.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("UploadImg")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Morgan",
                            LastName = "Housel"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Matt",
                            LastName = "Ridley"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Rebecca",
                            LastName = "Serle"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Majka",
                            LastName = "Burhardt"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Shawn",
                            LastName = "Moriarty"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "National",
                            LastName = "Geographic"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "AG",
                            LastName = "Barnett"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = " Gregg",
                            LastName = "Olsen"
                        });
                });

            modelBuilder.Entity("Book_Store.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRecommended")
                        .HasColumnType("bit");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly?>("PublicationDate")
                        .HasColumnType("date");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<byte[]>("UploadImage")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PublisherId");

                    b.HasIndex("TypeId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 7,
                            Image = "https://images.unsplash.com/photo-1589829085413-56de8ae18c73?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=912&q=80",
                            IsRecommended = false,
                            Isbn = "978-1426220616",
                            Price = 4m,
                            PublicationDate = new DateOnly(2023, 6, 14),
                            PublisherId = 3,
                            Title = "The Adventure Trail",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Image = "https://m.media-amazon.com/images/I/41GaGSSHKTL._SX320_BO1,204,203,200_.jpg",
                            IsRecommended = false,
                            Isbn = "978-1639363490",
                            Price = 4m,
                            PublicationDate = new DateOnly(2023, 7, 12),
                            PublisherId = 5,
                            Title = "To Kill a Mockingbird",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 6,
                            Image = "https://m.media-amazon.com/images/I/41z4GO8gcsL.jpg",
                            IsRecommended = false,
                            Isbn = "Not Enabled",
                            Price = 23m,
                            PublicationDate = new DateOnly(2023, 11, 8),
                            PublisherId = 2,
                            Title = "The Hitchhiker's Guide to the Galaxy",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 7,
                            Image = "https://m.media-amazon.com/images/I/41seRojoMXL._SX323_BO1,204,203,200_.jpg",
                            IsRecommended = false,
                            Isbn = "Not Enabled",
                            Price = 11m,
                            PublicationDate = new DateOnly(2023, 12, 7),
                            PublisherId = 2,
                            Title = "The Psychology of Money",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 6,
                            Image = "https://m.media-amazon.com/images/I/51tugIa7u6L._SX218_BO1,204,203,200_QL40_FMwebp_.jpg",
                            IsRecommended = false,
                            Isbn = "Not Enabled",
                            Price = 11m,
                            PublicationDate = new DateOnly(2023, 7, 22),
                            PublisherId = 5,
                            Title = "The Great Gatsby",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 7,
                            Image = "https://m.media-amazon.com/images/I/51FXbqQ04JL._SX382_BO1,204,203,200_.jpg",
                            IsRecommended = false,
                            Isbn = "Not Enabled",
                            Price = 23m,
                            PublicationDate = new DateOnly(2023, 2, 20),
                            PublisherId = 8,
                            Title = "Daqui a cinco anos",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 2,
                            Image = "https://m.media-amazon.com/images/I/41fiHlc4I-L.jpg",
                            IsRecommended = false,
                            Isbn = "Not Enabled",
                            Price = 4m,
                            PublicationDate = new DateOnly(2023, 8, 8),
                            PublisherId = 6,
                            Title = "Pride and Prejudice",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 6,
                            Image = "https://m.media-amazon.com/images/I/51+SWKopXhL.jpg",
                            IsRecommended = false,
                            Isbn = "978-1606795842",
                            Price = 11m,
                            PublicationDate = new DateOnly(2023, 3, 23),
                            PublisherId = 1,
                            Title = "A Staged Death",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 4,
                            Image = "https://images.unsplash.com/photo-1544947950-fa07a98d237f?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTF8fGJvb2t8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60",
                            IsRecommended = false,
                            Isbn = "978-1639363490",
                            Price = 11m,
                            PublicationDate = new DateOnly(2023, 3, 20),
                            PublisherId = 2,
                            Title = "The Catcher in the Rye",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 6,
                            Image = "https://images.unsplash.com/photo-1592496431122-2349e0fbc666?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=912&q=80",
                            IsRecommended = false,
                            Isbn = "978-1606795842",
                            Price = 4m,
                            PublicationDate = new DateOnly(2023, 3, 15),
                            PublisherId = 3,
                            Title = "Epic Journeys: 245 Life-Changing Adventures",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 7,
                            Image = "https://images.unsplash.com/photo-1589829085413-56de8ae18c73?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=912&q=80",
                            IsRecommended = false,
                            Isbn = "978-0008339074",
                            Price = 20m,
                            PublicationDate = new DateOnly(2023, 5, 7),
                            PublisherId = 1,
                            Title = "Harry Potter and the Philosopher's Stone",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 3,
                            Image = "https://m.media-amazon.com/images/I/41GaGSSHKTL._SX320_BO1,204,203,200_.jpg",
                            IsRecommended = false,
                            Isbn = "978-1426220616",
                            Price = 4m,
                            PublicationDate = new DateOnly(2023, 7, 16),
                            PublisherId = 1,
                            Title = "The Lord of the Rings",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 1,
                            Image = "https://m.media-amazon.com/images/I/41z4GO8gcsL.jpg",
                            IsRecommended = false,
                            Isbn = "Not Enabled",
                            Price = 4m,
                            PublicationDate = new DateOnly(2023, 6, 7),
                            PublisherId = 4,
                            Title = "The Great Gatsby",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 7,
                            Image = "https://m.media-amazon.com/images/I/41seRojoMXL._SX323_BO1,204,203,200_.jpg",
                            IsRecommended = false,
                            Isbn = "978-0008339074",
                            Price = 40m,
                            PublicationDate = new DateOnly(2023, 8, 13),
                            PublisherId = 5,
                            Title = "1984",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 5,
                            Image = "https://m.media-amazon.com/images/I/51tugIa7u6L._SX218_BO1,204,203,200_QL40_FMwebp_.jpg",
                            IsRecommended = false,
                            Isbn = "978-0008339074",
                            Price = 40m,
                            PublicationDate = new DateOnly(2023, 2, 27),
                            PublisherId = 7,
                            Title = "Daqui a cinco anos",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 4,
                            Image = "https://m.media-amazon.com/images/I/51FXbqQ04JL._SX382_BO1,204,203,200_.jpg",
                            IsRecommended = false,
                            Isbn = "978-1606795842",
                            Price = 30m,
                            PublicationDate = new DateOnly(2023, 6, 16),
                            PublisherId = 8,
                            Title = "The Psychology of Money",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 6,
                            Image = "https://m.media-amazon.com/images/I/41fiHlc4I-L.jpg",
                            IsRecommended = false,
                            Isbn = "978-1606795842",
                            Price = 4m,
                            PublicationDate = new DateOnly(2023, 3, 28),
                            PublisherId = 8,
                            Title = "Life on the Edge of Adventure and Motherhood",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 6,
                            Image = "https://m.media-amazon.com/images/I/51+SWKopXhL.jpg",
                            IsRecommended = false,
                            Isbn = "978-1982137458",
                            Price = 11m,
                            PublicationDate = new DateOnly(2023, 7, 16),
                            PublisherId = 2,
                            Title = "The Hitchhiker's Guide to the Galaxy",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 5,
                            Image = "https://images.unsplash.com/photo-1544947950-fa07a98d237f?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTF8fGJvb2t8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60",
                            IsRecommended = false,
                            Isbn = "978-1982137458",
                            Price = 11m,
                            PublicationDate = new DateOnly(2023, 8, 10),
                            PublisherId = 6,
                            Title = "The Psychology of Money",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 4,
                            Image = "https://images.unsplash.com/photo-1592496431122-2349e0fbc666?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=912&q=80",
                            IsRecommended = false,
                            Isbn = "Not Enabled",
                            Price = 40m,
                            PublicationDate = new DateOnly(2023, 11, 5),
                            PublisherId = 1,
                            Title = "The Lord of the Rings",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 21,
                            AuthorId = 5,
                            Image = "https://images.unsplash.com/photo-1589829085413-56de8ae18c73?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=912&q=80",
                            IsRecommended = false,
                            Isbn = "978-0008339074",
                            Price = 4m,
                            PublicationDate = new DateOnly(2023, 5, 23),
                            PublisherId = 3,
                            Title = "In Five Years",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 22,
                            AuthorId = 2,
                            Image = "https://m.media-amazon.com/images/I/41GaGSSHKTL._SX320_BO1,204,203,200_.jpg",
                            IsRecommended = false,
                            Isbn = "978-1606795842",
                            Price = 11m,
                            PublicationDate = new DateOnly(2023, 6, 28),
                            PublisherId = 7,
                            Title = "One Hundred Years of Solitude",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 23,
                            AuthorId = 4,
                            Image = "https://m.media-amazon.com/images/I/41z4GO8gcsL.jpg",
                            IsRecommended = false,
                            Isbn = "978-1639363490",
                            Price = 11m,
                            PublicationDate = new DateOnly(2023, 7, 1),
                            PublisherId = 4,
                            Title = "Daqui a cinco anos",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 24,
                            AuthorId = 2,
                            Image = "https://m.media-amazon.com/images/I/41seRojoMXL._SX323_BO1,204,203,200_.jpg",
                            IsRecommended = false,
                            Isbn = "978-0008339074",
                            Price = 20m,
                            PublicationDate = new DateOnly(2023, 11, 24),
                            PublisherId = 6,
                            Title = "Lost Cities, Ancient Tombs",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 25,
                            AuthorId = 3,
                            Image = "https://m.media-amazon.com/images/I/51tugIa7u6L._SX218_BO1,204,203,200_QL40_FMwebp_.jpg",
                            IsRecommended = false,
                            Isbn = "978-1606795842",
                            Price = 11m,
                            PublicationDate = new DateOnly(2023, 2, 7),
                            PublisherId = 7,
                            Title = "One Hundred Years of Solitude",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 26,
                            AuthorId = 7,
                            Image = "https://m.media-amazon.com/images/I/51FXbqQ04JL._SX382_BO1,204,203,200_.jpg",
                            IsRecommended = false,
                            Isbn = "Not Enabled",
                            Price = 20m,
                            PublicationDate = new DateOnly(2023, 2, 25),
                            PublisherId = 4,
                            Title = "In Five Years",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 27,
                            AuthorId = 4,
                            Image = "https://m.media-amazon.com/images/I/41fiHlc4I-L.jpg",
                            IsRecommended = false,
                            Isbn = "978-1639363490",
                            Price = 40m,
                            PublicationDate = new DateOnly(2023, 8, 26),
                            PublisherId = 3,
                            Title = "Lost Cities, Ancient Tombs",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 28,
                            AuthorId = 4,
                            Image = "https://m.media-amazon.com/images/I/51+SWKopXhL.jpg",
                            IsRecommended = false,
                            Isbn = "978-1639363490",
                            Price = 11m,
                            PublicationDate = new DateOnly(2023, 8, 5),
                            PublisherId = 3,
                            Title = "Pride and Prejudice",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 29,
                            AuthorId = 1,
                            Image = "https://images.unsplash.com/photo-1544947950-fa07a98d237f?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTF8fGJvb2t8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60",
                            IsRecommended = false,
                            Isbn = "Not Enabled",
                            Price = 4m,
                            PublicationDate = new DateOnly(2023, 9, 27),
                            PublisherId = 8,
                            Title = "The Psychology of Money",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 30,
                            AuthorId = 1,
                            Image = "https://images.unsplash.com/photo-1592496431122-2349e0fbc666?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=912&q=80",
                            IsRecommended = false,
                            Isbn = "Not Enabled",
                            Price = 30m,
                            PublicationDate = new DateOnly(2023, 3, 29),
                            PublisherId = 7,
                            Title = "A Staged Death",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 31,
                            AuthorId = 4,
                            Image = "https://images.unsplash.com/photo-1589829085413-56de8ae18c73?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=912&q=80",
                            IsRecommended = false,
                            Isbn = "978-0008339074",
                            Price = 4m,
                            PublicationDate = new DateOnly(2023, 10, 7),
                            PublisherId = 1,
                            Title = "Pride and Prejudice",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 32,
                            AuthorId = 5,
                            Image = "https://m.media-amazon.com/images/I/41GaGSSHKTL._SX320_BO1,204,203,200_.jpg",
                            IsRecommended = false,
                            Isbn = "978-1639363490",
                            Price = 40m,
                            PublicationDate = new DateOnly(2023, 4, 9),
                            PublisherId = 7,
                            Title = "1984",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 33,
                            AuthorId = 5,
                            Image = "https://m.media-amazon.com/images/I/41z4GO8gcsL.jpg",
                            IsRecommended = false,
                            Isbn = "Not Enabled",
                            Price = 40m,
                            PublicationDate = new DateOnly(2023, 12, 26),
                            PublisherId = 2,
                            Title = "To Kill a Mockingbird",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 34,
                            AuthorId = 1,
                            Image = "https://m.media-amazon.com/images/I/41seRojoMXL._SX323_BO1,204,203,200_.jpg",
                            IsRecommended = false,
                            Isbn = "978-1639363490",
                            Price = 11m,
                            PublicationDate = new DateOnly(2023, 6, 22),
                            PublisherId = 1,
                            Title = "The Great Gatsby",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 35,
                            AuthorId = 6,
                            Image = "https://m.media-amazon.com/images/I/51tugIa7u6L._SX218_BO1,204,203,200_QL40_FMwebp_.jpg",
                            IsRecommended = false,
                            Isbn = "978-1426220616",
                            Price = 20m,
                            PublicationDate = new DateOnly(2023, 11, 7),
                            PublisherId = 6,
                            Title = "Lost Cities, Ancient Tombs",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 36,
                            AuthorId = 6,
                            Image = "https://m.media-amazon.com/images/I/51FXbqQ04JL._SX382_BO1,204,203,200_.jpg",
                            IsRecommended = false,
                            Isbn = "Not Enabled",
                            Price = 11m,
                            PublicationDate = new DateOnly(2023, 11, 4),
                            PublisherId = 5,
                            Title = "Lost Cities, Ancient Tombs",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 37,
                            AuthorId = 3,
                            Image = "https://m.media-amazon.com/images/I/41fiHlc4I-L.jpg",
                            IsRecommended = false,
                            Isbn = "978-1982137458",
                            Price = 30m,
                            PublicationDate = new DateOnly(2023, 5, 26),
                            PublisherId = 7,
                            Title = "To Kill a Mockingbird",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 38,
                            AuthorId = 6,
                            Image = "https://m.media-amazon.com/images/I/51+SWKopXhL.jpg",
                            IsRecommended = false,
                            Isbn = "Not Enabled",
                            Price = 30m,
                            PublicationDate = new DateOnly(2023, 6, 28),
                            PublisherId = 1,
                            Title = "Epic Journeys: 245 Life-Changing Adventures",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 39,
                            AuthorId = 6,
                            Image = "https://images.unsplash.com/photo-1544947950-fa07a98d237f?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTF8fGJvb2t8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60",
                            IsRecommended = false,
                            Isbn = "978-1639363490",
                            Price = 20m,
                            PublicationDate = new DateOnly(2023, 10, 15),
                            PublisherId = 3,
                            Title = "Epic Journeys: 245 Life-Changing Adventures",
                            TypeId = 1
                        });
                });

            modelBuilder.Entity("Book_Store.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("UploadImg")
                        .HasColumnType("tinyint");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "some address",
                            Email = "username1@example.com",
                            FirstName = "Ramy",
                            LastName = "Ahmed",
                            Password = "super secret",
                            PhoneNumber = "2348719749",
                            UserName = "username1"
                        },
                        new
                        {
                            ID = 2,
                            Address = "some address",
                            Email = "username2@example.com",
                            FirstName = "Ayman",
                            LastName = "Rady",
                            Password = "super secret",
                            PhoneNumber = "2348719749",
                            UserName = "username2"
                        });
                });

            modelBuilder.Entity("Book_Store.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            OrderDate = new DateTime(2020, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalPrice = 20m
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 1,
                            OrderDate = new DateTime(2023, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalPrice = 20m
                        });
                });

            modelBuilder.Entity("Book_Store.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            BookId = 1,
                            Price = 10m,
                            Quantity = 2
                        },
                        new
                        {
                            OrderId = 2,
                            BookId = 2,
                            Price = 20m,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("Book_Store.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Publisher");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Harriman House"
                        },
                        new
                        {
                            Id = 2,
                            Name = "The Rational Optimist"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Atria"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Editora Paralela"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Pegasus Books"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Healthy Learning"
                        },
                        new
                        {
                            Id = 7,
                            Name = "National Geographic Team"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Kindle Edition"
                        });
                });

            modelBuilder.Entity("Book_Store.Models.Types", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Self-motivation"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Detective & Mystery"
                        });
                });

            modelBuilder.Entity("Book_Store.Models.Book", b =>
                {
                    b.HasOne("Book_Store.Models.Author", "Author")
                        .WithMany("Book")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Book_Store.Models.Publisher", "Publisher")
                        .WithMany("Book")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Book_Store.Models.Types", "BookType")
                        .WithMany("Books")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("BookType");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Book_Store.Models.Order", b =>
                {
                    b.HasOne("Book_Store.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Book_Store.Models.OrderItem", b =>
                {
                    b.HasOne("Book_Store.Models.Book", "Books")
                        .WithMany("Items")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Book_Store.Models.Order", "Orders")
                        .WithMany("Books")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Books");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Book_Store.Models.Author", b =>
                {
                    b.Navigation("Book");
                });

            modelBuilder.Entity("Book_Store.Models.Book", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Book_Store.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Book_Store.Models.Order", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Book_Store.Models.Publisher", b =>
                {
                    b.Navigation("Book");
                });

            modelBuilder.Entity("Book_Store.Models.Types", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
